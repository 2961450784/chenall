import win.ui;
import win.ui.menu;
import web.form; 
import inet.http;
import inet;
import web.json;
import mouse;
import inet.http;
import inet;
import sqlite;
import fsys.file;
//import inet.downBox;
var version = "2012-09-15";
/*DSG{{*/
var winform = ..win.form( text="网盘自动签到C/S版 by chenall http://chenall.net ";bottom=330;scroll=1;right=490;border="dialog frame";max=false;parent=...;cp=1 )
winform.add( 
checkbox={ bottom=22;right=138;left=50;top=5;z=1;text="显示WEB窗口";cls="checkbox";hide=1 };
button2={ bottom=326;text="签到记录";left=8;top=293;z=11;right=73;cls="button" };
static2={ bottom=77;text="用户名:";left=6;right=49;top=60;transparent=1;z=5;cls="static" };
static={ bottom=47;text="网盘:";left=9;right=41;top=28;transparent=1;z=3;cls="static" };
login_type={ bottom=130;right=107;left=41;
items={ "普通登录" };text="combobox";z=13;top=110;mode="dropdownlist";edge=1;cls="combobox" };
disk_type={ bottom=46;right=140;left=41;
items={  };text="请选择网盘";z=2;top=26;mode="dropdownlist";edge=1;cls="combobox" };
password={ bottom=103;right=155;left=53;top=84;tabstop=1;z=8;edge=1;cls="edit" };
button={ bottom=323;text="开始签到";left=90;top=290;z=4;right=155;cls="button" };
static3={ bottom=103;text="密码:";left=8;right=53;top=86;transparent=1;z=6;cls="static" };
static4={ bottom=130;right=39;left=6;text="登录:";top=113;z=14;transparent=1;cls="static" };
add_site={ bottom=137;right=157;left=113;text="添加";top=110;tabstop=1;z=9;cls="button" };
accounts={ ah=1;bgcolor=16777215;vscroll=1;right=489;left=161;fullRow=1;bottom=325;top=5;msel=false;aw=1;gridLines=1;z=10;edge=1;cls="listview" };
info={ bottom=283;right=159;left=4;top=142;transparent=1;z=12;cls="static" };
username={ bottom=74;right=155;left=54;top=54;tabstop=1;z=7;edge=1;cls="edit" }
)
/*}}*/

winform.wndproc = function(hwnd,message,wParam,lParam){
	select( message ) {
		case 0x205/*_WM_RBUTTONUP*/{
			//鼠标右键弹起,下面获取坐标
			var x,y = win.getMessagePos(lParam);
		}
		else{
			
		}
	}
	//无返回值则继续调用默认回调函数
}


/*DSG{{*/
var webform = win.form( bottom=400;parent=...;text="网盘自动签到 By chenall";exmode="none";min=false;scroll=1;mode="popup";right=600 )
webform.add(  )
/*}}*/


//创建web窗体
var wb = web.form( webform,
	,//可输入_UIFLAG_ 前缀的常量自定义外观
	,//可输入_DLCTL_ 前缀的常量以控制下载行为
	,//"USER AGENT"
	);
var http = inet.http();
var sql = null;
//var mht = web.mshtml();
var logfile = fsys.file("\签到记录.log","a+");
var main_exit = false; //主窗口已经关闭?如果关闭了就退出程序.
var sina_user="";
var sina_pass="";
var disk_type = {};
var login_type = {};
var auto_start = 0;
var api_url = "http://AutoSign.chenall.net";
var info = web.form(winform.info,0x4 | 0x2 | 0x20/*_UIFLAG_OPENNEWWIN*//*_UIFLAG_DISABLE_HELP_MENU*//*_UIFLAG_NO3DBORDER*/)
info.go("http://AutoSign.chenall.net/AutoSign.html#"+version);

info.showMenu=function(x,y,id,ele){
    return false; //禁用右键菜单,也可以在这里弹出自定义的菜单
}
http.setTimeouts(10000,600000,600000);
webform.onClose = function(hwnd,message,wParam,lParam){
	if (main_exit)//主窗口已经半闭.
		return;
	webform.show(false);
	winform.checkbox.checked = false;
    return false;//禁止关闭此窗口
}

winform.checkbox.oncommand = function(id,event){
	//winform.msgbox( winform.checkbox.text );
	webform.show(winform.checkbox.checked);
}


winform.onClose = function(hwnd,message,wParam,lParam){
	main_exit = true;
	logfile.close();
    webform.close();
}

winform.button2.oncommand = function(id,event){
	//winform.msgbox( winform.button2.text );
	sign_log(null)	
}

winform.add_site.oncommand = function(id,event){
	if (winform.password.text == "" || winform.password.text == "" ||winform.disk_type.selIndex == "" )
		return;
	var user = winform.username.text;
	var pass = winform.password.text;
	var did = disk_type[winform.disk_type.selIndex];
	lstbox_add("添加:"+user+"("+disk_type[did]+")");
	var res = "type="+did+"&ac=chk&su="+inet.url.encode(user,true)+"&sp="+inet.url.encode(pass,true);
	var oauth = null;
	if (winform.login_type.selIndex > 1)
	{
		oauth = login_type[winform.login_type.selIndex-1];
		res = res + "&oauth=" + oauth;
	}
	res = call_api(res)
	if (res["errno"] != 0)
	{
		lstbox_add("失败:"+res["msg"]);
		win.msgbox(res["msg"],"添加帐号失败");
		return;
	}
	if (res["chk"][1] == 1)
		pass = res["chk"][2];
	var id = ins_sql(did,user,'&k='+res['k'],oauth);
	if (id != 0)
		winform.accounts.addItem({tostring(id);user+"("+winform.disk_type.selText+")"});
	winform.username.text = "";
	winform.password.text = "";
	lstbox_add("添加成功");
}

ins_sql = function(t,s,p,k="null"){
	sql = sqlite("\database.db");
	if (k != "null")
		k = "'"+k+"'";
	var id = sql.stepQuery("select id from config where type='"+t+"' and user='"+s+"'")
	if (id != null)
		id = id['ID'];
	if (id == null)
	{
		id = sql.stepQuery("select id+1 as id from config a where not exists(select 1 from config where id=a.id+1) order by id limit 1")
		id = id['id']
		sql.exec("insert into config values("+id+",'"+t+"','"+s+"','"+p+"',"+k+")")
	}
	else {
		winform.accounts.selIndex = winform.accounts.findItem(tostring(id));
		if  (winform.msgboxTest("该帐号"+s+"已经存在,是否更新","已存在帐号"))
			sql.exec("update config set pass='"+p+"',oauth="+k+" where type='"+t+"' and user='"+s+"'");
		id = 0;
	}
	sql.close();
	return id;
}

wb.external = { 
	del_log = function(item,did,date){
		sql = sqlite("\database.db")
		sql.exec("delete from sign where did="+did + " and date='"+date+"'" )
		sql.close()
		sign_log(item);
		return true;
	}
}

sign_log = function(item,flags = 0){
	sql = sqlite("\database.db")
	if (flags == -1)
	{
		item = winform.accounts.items[item];
		sql.exec("delete from sign where did="+item)
		sql.close();
		return;
	}

	var logs = "SELECT * FROM sign";
	var string = "签到记录";
	if (item != null && item > 0)
	{
		logs +=  " where did="+winform.accounts.items[item];
		string += "--"+winform.accounts.getItemText(item,2);
	}
	else {
		item = 0;
		string = "签到记录"
		logs = "SELECT did,type,date,user,msg,oauth FROM sign,config where did=ID order by date desc limit 100";
	}
	logs = sql.getTable(logs);
	sql.close();
	string += '<table style="bordercolor=\"#998877\" border=\"1\"">'
	for (k,v in logs)
	{
		string += "<tr>"
		if (item == 0)
		{
			string += "<td>"+disk_type[v['type']]+"</td>"
			string += "<td>"+v['user']
			if (v['oauth'] != null)
			{
				string += "(OA:"+v['oauth']+")"
			}	
			string += "</td>"
		}
		string += "<td>"+v['date']+"</td><td>"+v['msg']+"</td>"
		string += "<td><button onclick=external.del_log("+item+","+v['did']+",'"+v['date']+"')>删</button></td>"
		string += "</tr>";
		
	}
	string += "</table>"
	wb.write(string);
	webform.show(true);
	sql.close();
}

sign_log_add = function(id,msg){
	sql = sqlite("\database.db")
	sql.exec("insert into sign values("+id+",date('now','localtime'),'"+msg+"')")
	sql.close();
}

//读取网页信息http.Get
function call_api(uri,errinfo = '')
{
	res = http.get(api_url+"/AutoSign/?"+uri);
	lstbox_add(uri);
	lstbox_add(res);
	if (res == null)
	{
		lstbox_add("网络错误: " + errinfo);
	}
	try{
		res = web.json.parse(res);
	}
	catch(e){
		lstbox_add("数据转换出错:"+res)	
		res = null;
	}
	return res;
}

del_sql=function(id){
	sql = sqlite("\database.db");
	sql.exec("delete from config where ID="+id+";delete from sign where did="+id);
	sql.close();
}

winform.popmenu = win.ui.popmenu(winform);//创建弹出菜单
winform.popmenu.add('删除',function(id){
	var id = winform.accounts.selIndex;
	del_sql(winform.accounts.items[id]);
	winform.accounts.delItem(id);
});
winform.popmenu.add('签到记录',function(id){
	var id = winform.accounts.selIndex;
	sign_log(id);
});
winform.popmenu.add('删除签到记录',function(id){
	var id = winform.accounts.selIndex;
	sign_log(id,-1);
});


winform.accounts.onnotify = function(id,code,ptr){ 
	var nm = winform.accounts.getNotifyMessage(code,ptr);
	select(code) {
		case 0xFFFFFFFB{//NM_RCLICK  
	   		if(nm.iItem){
    		    var x,y = mouse.getPos()
    			winform.popmenu.popup(x,y,true);//弹出菜单
        	}
    	}
    	case 0xFFFFFFFD{/*_NM_DBLCLK*/
			sign_log(winform.accounts.items[nm.iItem]) 
    	}
    }
  
}

lstbox_add = function(msg){
	if (msg = null)
		return;
	var tm = time();
	tm.format="%H:%M:%S ";
	msg = tostring(tm) + msg;
	logfile.write(msg+'\r\n');
}



//字节转换
sign_func = function(sv,su,sp,oauth = null)
{
	var uri = "type="+sv+"&su="+su;
	if (string.left(sp,3) == '&k=')
	{
		uri = uri + sp;
	}
	else {
		uri = uri + "&sp="+sp;
		if (oauth != null)
			uri = uri + "&oauth="+oauth;
	}
	ret =  call_api(uri);
	if (ret == null)
		return null;
	if (ret["errno"] > 1)
	{
		lstbox_add("失败:"+ret["msg"]);
		return null;
	}
	lstbox_add("成功:" + ret["msg"]);
	return ret["msg"];
}

sign_all = function(){
	var done = true;
	var ret = "0";
	var su,sp,key,st,flag
	sql = sqlite("\database.db")
	tab = sql.getTable("SELECT * from config where type = '_115' or (id>0 and id not in (select did from sign where date=date('now','localtime')))");
	sql.close();
	for (k,v in tab)
	{
		winform.accounts.selIndex = winform.accounts.findItem(tostring(v["ID"]));
		lstbox_add("帐号:" + winform.accounts.getItemText(winform.accounts.selIndex,2));
		ret = sign_func( v['type'], v['user'], v['pass'], v['oauth']);
		if (ret != null)
		{
			sign_log_add(v["ID"],ret);
			winform.accounts.setItemText("√",winform.accounts.findItem(tostring(v["ID"])),3);
		}
		else {
			done = false;
		}
		
	}
	return done;
}


auto_sign = function(){
	winform.button.disabled = true;
	winform.button.text = "正在签到..";
	lstbox_add("开始自动签到" + tostring(time()));
	var i = 1;
	while(sign_all() == false){
		if (i > 3)
		{
			lstbox_add("部份签到失败，请检查记录.");
			break;
		}
		else 
			lstbox_add("部份签到失败，正在重试第"+i+"次.");
		i += 1;
	}
	lstbox_add("自动签到结束" + tostring(time()));
	winform.button.disabled = false;
	winform.button.text = "开始签到";
	return;
	
}

winform.button.oncommand = function(id,event){
	return auto_sign();
}

//var cmdline = string.split("aa","= ");
try{
	var cmdline = string.split(_CMDLINE,"= ");
	for(i=1;table.count(cmdline);1){
		if (cmdline[i] == "auto")
			auto_start = 1;
		else if (cmdline[i] == "url")
		{
			i = i+1
			api_url = cmdline[i];
		}
	}
}

wb.noScriptErr=true;
winform.accounts.insertColumn("ID",30);
winform.accounts.insertColumn("帐号",225);
winform.accounts.insertColumn("签到",40);

winform.disk_type.clear();

sql = sqlite("\database.db");
if (!sql.existsTable("config"))
{
	sql.exec("CREATE TABLE config(
		ID INTEGER PRIMARY KEY,
		type TEXT NOT NULL,
		user TEXT,
		pass TEXT,
		oauth TEXT,
		UNIQUE (type,user) 
		);"
	)
	sql.exec("insert into config values (0,0,'','',null)");
}

if (!sql.existsTable("sign"))
{
	sql.exec("CREATE TABLE sign(
		did TEXT NOT NULL,
		date TEXT NOT NULL,
		msg TEXT
		);"
	)
}

tab = sql.getTable("select config.*,ifnull(did,0)>0 as st from config left join sign on did=id and date=date('now','localtime') group by id")
sql.close();

var list = call_api("ac=list","从服务器获取参数列表");
if (list == null)
	win.msgbox("获取列表失败");
for (k,v in list)
{
	disk_type[k] = v['id'];
	disk_type[v['id']] = v['name'];
	winform.disk_type.add(v['name'])
}

list = call_api("ac=list&type=oauth","获取支持的登录列表")

for (k,v in list)
{
	login_type[k] = v['id'];
	login_type[v['id']] = v['name'];
	winform.login_type.add(v['name'])
}


winform.disk_type.selIndex = 1;
winform.login_type.selIndex = 1;
winform.text = winform.text + version;
winform.show();
for (k,v in tab)
{
	if (v['type'] == 0)
	{
		sina_user = v['user'];
		sina_pass = v['key'];
		continue;
	}
	var su = v['user'];
	var st = null;
	if (v['oauth'] != null)
	{
		su = su +"-OA:"+v['oauth'];
	}
	if (v['st'] != 0)
	{
		st = '√ '
	}
	winform.accounts.addItem({tostring(v['ID']);su+"(" + disk_type[v['type']] + ")";st})
}


if (auto_start == 1)
{
	win.delay(3000)
	auto_sign();
	win.delay(3000);
	winform.close();
}

win.loopMessage();
